<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
  						http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
  						http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
  						http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

	<!-- spring-servlet: Configuracion de los servlets mediante spring. Controladores y manejadores de vistas -->

	<!-- Enables the Spring MVC @Controller programming model-->
	<mvc:annotation-driven />
 
	<!-- STATIC RESOURCES -->
	<mvc:resources mapping="/img/**" location="/assets/app/img/" />
	<mvc:resources mapping="/images/**" location="/assets/app/img/" />
	<mvc:resources mapping="/css/**" location="/assets/app/css/" />
	<mvc:resources mapping="/js/**" location="/assets/app/js/" />
	<mvc:resources mapping="/fonts/**" location="/assets/app/fonts/" />
	<mvc:resources mapping="/assets/**" location="/assets/" />

	<!-- FICHEROS DE PROPIEDADES CON TRADUCCIONES DE LOS LITERALES DE LA APLICACIÓN A DISTINTOS IDIOMAS -->	
	<import resource="classpath:/spring/support-beans.xml"/>
	

	
	<!-- CONFIGURACION DE TILES COMO DEFINICION DE TEMPLATES DE LOS LAYOUTS -->
	<bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/tiles/tiles*.xml</value>
			</list>
		</property>
	</bean>

	<!-- Resolvemos el retorno de las vistas de spring a través de tiles -->
	<bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass">
			<value>
				org.springframework.web.servlet.view.tiles3.TilesView
			</value>
		</property>
		<property name="order" value="1" />
	</bean>

	<bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
	    <property name="contentType" value="application/json"/>
	</bean>


	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/pages/" />
		<property name="suffix" value=".jsp" />
	</bean>
 -->

	<!-- SessionLocaleResolver resolves locales by inspecting a predefined attribute in a user’s session. 
	If the session attribute doesn’t exist, this locale resolver determines the default locale from the accept-language HTTP header. 
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
		<property name="defaultLocale" value="en" />
		<property name="cookieName" value="myAppLocaleCookie"></property>
		<property name="cookieMaxAge" value="3600"></property>
	</bean>
	-->

	<!-- LocaleChangeInterceptor interceptor detects if a special parameter is present in the current HTTP request. 
	The parameter name can be customized with the paramName property of this interceptor. 
	If such a parameter is present in the current request, this interceptor changes the user’s locale according to the parameter value. 
	<mvc:interceptors>
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
			<property name="paramName" value="locale" />
		</bean>
	</mvc:interceptors>
-->

	<!-- RUTA DONDE BUSCAR COMPONENTES DE SPRING POR ANOTACIONES -->
	<context:component-scan base-package="es.ourorganization.ldap.web.management" />
</beans>
